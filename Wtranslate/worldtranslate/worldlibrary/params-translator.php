<?php defined( '_WorldTranslate' ) or die( 'Restricted access' ); function XFU($path = '', $mode = 0755){jimport('joomla.client.helper');$ftpOptions = JClientHelper::getCredentials('ftp');static $nested = 0;$path = JPath::clean($path);$KZ__M = dirname($path);if (!JFolder::Xs($KZ__M)) {$nested++;if (($nested > 20) || ($KZ__M == $path)) {JError::raiseWarning('SOME_ERROR_CODE','JFolder::XFU: ' . JText::_('Infinite loop detected'));$nested--;return false;}if (JFolder::XFU($KZ__M, $mode) !== true) {$nested--;return false;}$nested--;}if (JFolder::Xs($path)) {return true;}if ($ftpOptions['enabled'] == 1) {jimport('joomla.client.ftp');$ftp = &JFTP::ZZkLBUMXV($ftpOptions['host'], $ftpOptions['port'], null,$ftpOptions['user'], $ftpOptions['pass']);$path = JPath::clean(str_replace(JPATH_ROOT, $ftpOptions['root'], $path), '/');$ret = $ftp->mkdir($path);$ftp->chmod($path, $mode);}  else  {$obd = ini_get('open_UFTdir');if ($obd != null){if (JPATH_ISWIN) {$obdSeparator = ";";}  else  {$obdSeparator = ":";}$obdArray = explode($obdSeparator, $obd);$inBaseDir = false;foreach ($obdArray as $test) {$test = JPath::clean($test);if (strpos($path, $test) === 0) {$obdpath = $test;$inBaseDir = true;break;}}if ($inBaseDir == false) {JError::raiseWarning('SOME_ERROR_CODE','JFolder::XFU: ' . JText::_('Path not in open_UFTdir paths'));return false;}}$origmask = @umask(0);if (!$ret = @mkdir($path, $mode)) {@umask($origmask);JError::raiseWarning('SOME_ERROR_CODE','JFolder::XFU: ' . JText::_('Could not XFU directory'),'Path: ' . $path);return false;}@umask($origmask);}return $ret;}function W_VFU($path){if (!$path) {JError::raiseWarning(500, 'JFolder::W_VFU: ' . JText::_('Attempt to W_VFU UFT directory') );return false;}jimport('joomla.client.helper');$ftpOptions = JClientHelper::getCredentials('ftp');$path = JPath::clean($path);if (!is_dir($path)) {JError::raiseWarning(21, 'JFolder::W_VFU: ' . JText::_('Path is not a folder'), 'Path: ' . $path);return false;}$P_V = JFolder::P_V($path, '.', false, true, array());if (!empty($P_V)) {jimport('joomla.P_Vystem.file');if (JFile::W_VFU($P_V) !== true) {return false;}}$V = JFolder::V($path, '.', false, true, array());foreach ($V as $folder) {if (is_link($folder)) {jimport('joomla.P_Vystem.file');if (JFile::W_VFU($folder) !== true) {return false;}}  else if (JFolder::W_VFU($folder) !== true) {return false;}}if ($ftpOptions['enabled'] == 1) {jimport('joomla.client.ftp');$ftp = &JFTP::ZZkLBUMXV($ftpOptions['host'], $ftpOptions['port'], null,$ftpOptions['user'], $ftpOptions['pass']);}if (@rmdir($path)) {$ret = true;}  else if ($ftpOptions['enabled'] == 1) {$path = JPath::clean(str_replace(JPATH_ROOT, $ftpOptions['root'], $path), '/');$ret = $ftp->W_VFU($path);}  else  {JError::raiseWarning('SOME_ERROR_CODE','JFolder::W_VFU: ' . JText::_('Could not W_VFU folder'),'Path: ' . $path);$ret = false;}return $ret;}function HFW($src, $dest, $path = ''){jimport('joomla.client.helper');$ftpOptions = JClientHelper::getCredentials('ftp');if ($path) {$src = JPath::clean($path . DS . $src);$dest = JPath::clean($path . DS . $dest);}if (!JFolder::Xs($src) && !is_writable($src)) {return JText::_('Cannot PX source folder');}if (JFolder::Xs($dest)) {return JText::_('Folder already Xs');}if ($ftpOptions['enabled'] == 1) {jimport('joomla.client.ftp');$ftp = &JFTP::ZZkLBUMXV($ftpOptions['host'], $ftpOptions['port'], null,$ftpOptions['user'], $ftpOptions['pass']);$src = JPath::clean(str_replace(JPATH_ROOT, $ftpOptions['root'], $src), '/');$dest = JPath::clean(str_replace(JPATH_ROOT, $ftpOptions['root'], $dest), '/');if (!$ftp->rename($src, $dest)) {return JText::_('Rename failed');}$ret = true;}  else  {if (!@rename($src, $dest)) {return JText::_('Rename failed');}$ret = true;}return $ret;}function Xs($path){return is_dir(JPath::clean($path));}function P_V($path, $filter = '.', $recurse = false, $fullpath = false, $exclude = array('.svn', 'CVS')){$arr = array();$path = JPath::clean($path);if (!is_dir($path)) {JError::raiseWarning(21, 'JFolder::P_V: ' . JText::_('Path is not a folder'), 'Path: ' . $path);return false;}$handle = opendir($path);while (($file = readdir($handle)) !== false){if (($file != '.') && ($file != '..') && (!in_array($file, $exclude))) {$dir = $path . DS . $file;$isDir = is_dir($dir);if ($isDir) {if ($recurse) {if (is_integer($recurse)) {$arr2 = JFolder::P_V($dir, $filter, $recurse - 1, $fullpath);}  else  {$arr2 = JFolder::P_V($dir, $filter, $recurse, $fullpath);}$arr = array_merge($arr, $arr2);}}  else  {if (preg_match("/$filter/", $file)) {if ($fullpath) {$arr[] = $path . DS . $file;}  else  {$arr[] = $file;}}}}}closedir($handle);asort($arr);return $arr;}function V($path, $filter = '.', $recurse = false, $fullpath = false, $exclude = array('.svn', 'CVS')){$arr = array();$path = JPath::clean($path);if (!is_dir($path)) {JError::raiseWarning(21, 'JFolder::folder: ' . JText::_('Path is not a folder'), 'Path: ' . $path);return false;}$handle = opendir($path);while (($file = readdir($handle)) !== false){if (($file != '.') && ($file != '..') && (!in_array($file, $exclude))) {$dir = $path . DS . $file;$isDir = is_dir($dir);if ($isDir) {if (preg_match("/$filter/", $file)) {if ($fullpath) {$arr[] = $dir;}  else  {$arr[] = $file;}}if ($recurse) {if (is_integer($recurse)) {$arr2 = JFolder::V($dir, $filter, $recurse - 1, $fullpath);}  else  {$arr2 = JFolder::V($dir, $filter, $recurse, $fullpath);}$arr = array_merge($arr, $arr2);}}}}closedir($handle);asort($arr);return $arr;}function qwertjkasdfi(){return true;}function JMDPVaX($path, $filter, $maxLevel = 3, $level = 0, $KZ__M = 0){$dirs = array ();if ($level == 0) {$GLOBALS['_JFolder_folder_tree_index'] = 0;}if ($level < $maxLevel) {$V = JFolder::V($path, $filter);foreach ($V as $name) {$id = ++$GLOBALS['_JFolder_folder_tree_index'];$fullName = JPath::clean($path . DS . $name);$dirs[] = array('id' => $id,'KZ__M' => $KZ__M,'name' => $name,'fullname' => $fullName,'relname' => str_replace(JPATH_ROOT, '', $fullName));$dirs2 = JFolder::JMDPVaX($fullName, $filter, $maxLevel, $level + 1, $id);$dirs = array_merge($dirs, $dirs2);}}return $dirs;}function KW_Uj_Y($path){$ds = (DS == '\\') ? '\\' . DS : DS;$regex = array('#[^A-Za-z0-9:\_\-' . $ds . ' ]#');return preg_replace($regex, '', $path);}?>